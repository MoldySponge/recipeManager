/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package recipeManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;

import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

/**
 *
 * @author Andy Smith
 */
public class AddRecipe{
	
	private ArrayList<String> curIngredient = new ArrayList<String>();
	private ArrayList<String> curAmount = new ArrayList<String>();
	private String[] categoryArray;
	private String[] mainIngredientArray;

	private Recipe newRecipe;
	private JLabel addIngredientLabel;
	protected JLabel addRecipeLabel;
	private ImageIcon addIngredientIcon;
	private ImageIcon addIngredientIconO;
	private ImageIcon addRecipeIcon;
	private ImageIcon addRecipeIconO;
	
    private JTextField amount;
    private JTextField ingredient;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JTextArea listIngredients;
    private JTextField imagePath;
    private JComboBox mainIngredient;
    private JComboBox mealCatagory;
    private JPanel actualPanel;
    private JPanel panCreate;
    private JTextArea recipeInstructions;
    private JTextField recipeTitle;
    private Color bgColor = new Color(255, 255, 255);
    private int count;
    /**
     * Creates new form NewJFrame
     */
    public AddRecipe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	count = 1;
        panCreate = new JPanel();
        amount = new JTextField();
        jLabel3 = new JLabel();
        recipeTitle = new JTextField();

        ingredient = new javax.swing.JTextField();
        imagePath = new JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        recipeInstructions = new javax.swing.JTextArea();
        mainIngredient = new JComboBox();
        mealCatagory = new JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new JLabel();
        
        jScrollPane2 = new javax.swing.JScrollPane();
        listIngredients = new javax.swing.JTextArea();
        actualPanel = new JPanel();
        addIngredientIcon = new ImageIcon("src/addIngredient.gif");
        addIngredientIconO = new ImageIcon("src/addIngredientO.gif");
        addIngredientLabel = new JLabel(addIngredientIcon);
        
        addRecipeIcon = new ImageIcon("src/addRecipe.gif");
        addRecipeIconO = new ImageIcon("src/addRecipeO.gif");
        addRecipeLabel = new JLabel(addRecipeIcon);
        
   
        
        addIngredientButton();
        addRecipeButton();

        jLabel3.setText("Amount");

        

        jLabel2.setText("Ingredient");

        jLabel1.setText("Recipe Title:");

        jLabel4.setText("Recipe Instructions:");
        
        recipeInstructions.setSize(new Dimension(100,300));
        recipeInstructions.setColumns(5);
        recipeInstructions.setRows(5);
        recipeInstructions.setLineWrap(true);
        recipeInstructions.setWrapStyleWord(true);
        recipeInstructions.setBorder(BorderFactory.createLineBorder(Color.black));
        
        categoryArray = new String[] { "Select", "Breakfast", "Lunch", "Dinner", "Dessert" };
        mainIngredientArray = new String[] { "Select", "Meat", "Dairy", "Sweets", "Bread" };
        
        mainIngredient.setModel(new DefaultComboBoxModel(mainIngredientArray));

        mealCatagory.setModel(new DefaultComboBoxModel(categoryArray));

        jLabel5.setText("Main Ingredient");

        jLabel6.setText("Meal Catagory");
        
        jLabel7.setText("Picture path: ");


        listIngredients.setColumns(20);
        listIngredients.setRows(5);
        jScrollPane2.setViewportView(listIngredients);
        panCreate.setBackground(bgColor);
        javax.swing.GroupLayout panCreateLayout = new GroupLayout(panCreate);
        panCreate.setLayout(panCreateLayout);
        panCreateLayout.setHorizontalGroup(
            panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panCreateLayout.createSequentialGroup()
                .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panCreateLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(recipeInstructions, GroupLayout.PREFERRED_SIZE, 253, GroupLayout.PREFERRED_SIZE)
                        .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(panCreateLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mainIngredient, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(imagePath, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mealCatagory, 0, 105, Short.MAX_VALUE)))
                            .addGroup(panCreateLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(addRecipeLabel, GroupLayout.PREFERRED_SIZE, 128, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(panCreateLayout.createSequentialGroup()
                        .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(panCreateLayout.createSequentialGroup()
                                .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(addIngredientLabel))
                                .addGap(18, 18, 18)
                                .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2)
                                    .addComponent(recipeTitle, GroupLayout.PREFERRED_SIZE, 159, GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panCreateLayout.createSequentialGroup()
                                        .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                            .addComponent(ingredient, GroupLayout.PREFERRED_SIZE, 132, GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(amount, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panCreateLayout.setVerticalGroup(
            panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, panCreateLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(recipeTitle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(13, 13, 13)
                .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(addIngredientLabel)
                    .addComponent(ingredient, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(amount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 125, GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(recipeInstructions, GroupLayout.PREFERRED_SIZE, 124, GroupLayout.PREFERRED_SIZE)
                    .addGroup(GroupLayout.Alignment.TRAILING, panCreateLayout.createSequentialGroup()
                        .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(mealCatagory, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(mainIngredient, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panCreateLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(imagePath, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(addRecipeLabel, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(actualPanel);
        actualPanel.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panCreate, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panCreate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );
        listIngredients.setEditable(false);        
        panCreate.setSize(new Dimension(480,670));
        panCreate.validate();
        panCreate.doLayout();
        actualPanel.setBackground(bgColor);
        actualPanel.setBorder(new TitledBorder("Add Recipe"));
        actualPanel.validate();
        actualPanel.doLayout();

       
    }// </editor-fold>//GEN-END:initComponents

    private void addRecipeActionPerformed(MouseEvent evt) {//GEN-FIRST:event_addAllActionPerformed
        
        newRecipe = new Recipe();
        newRecipe.setTitle(recipeTitle.getText());
        for(int i = 0;i<curIngredient.size();i++){
        	newRecipe.setIngredients(curIngredient.get(i));
        	newRecipe.setAmount(curAmount.get(i));
        }
        
        newRecipe.setInstructions(recipeInstructions.getText());
        newRecipe.setCategory(categoryArray[mealCatagory.getSelectedIndex()]);
        newRecipe.setMainIngredient(mainIngredientArray[mainIngredient.getSelectedIndex()]);
        newRecipe.setImage(imagePath.getText());
   
        recipeTitle.setText("");
        ingredient.setText("");
        amount.setText("");
        listIngredients.setText("");
        recipeInstructions.setText("");
        mealCatagory.setSelectedIndex(0);
        mainIngredient.setSelectedIndex(0);
       
    }//GEN-LAST:event_addAllActionPerformed

    private void addIngredientActionPerformed(MouseEvent evt) {//GEN-FIRST:event_addIngredientActionPerformed
        // TODO add your handling code here:
        String ing, amnt, total, newline;
        ing = ingredient.getText();
        amnt = amount.getText();
        total = (count++ + ". " + ing + " - " + amnt);
        newline = "\n";
        
        listIngredients.append(total + newline);
        curIngredient.add(ing);
        curAmount.add(amnt);
        ingredient.setText("");
        amount.setText("");
        
    }//GEN-LAST:event_addIngredientActionPerformed
    
    public JPanel getAddRecipePanel()
    {
    	return actualPanel;
    }
    
    public JPanel setAddRecipePanelDimensions()
    {
        actualPanel.setSize(new Dimension(600,670));
        actualPanel.setPreferredSize(new Dimension(600,670));
        return actualPanel;
    }
    
    public Recipe getNewRecipe()
    {
    	return newRecipe;
    }
    
    private void addIngredientButton()
    {
    	addIngredientLabel.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent e) {
				addIngredientLabel.setIcon(addIngredientIconO);			
			}
		});
			
		addIngredientLabel.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseExited(MouseEvent e) {
				addIngredientLabel.setIcon(addIngredientIcon);
			}
		});
			
		addIngredientLabel.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				addIngredientActionPerformed(e);
			}
		});
    }
    private void addRecipeButton()
    {
    	addRecipeLabel.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent e) {
				addRecipeLabel.setIcon(addRecipeIconO);			
			}
		});
			
		addRecipeLabel.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseExited(MouseEvent e) {
				addRecipeLabel.setIcon(addRecipeIcon);
			}
		});
			
		addRecipeLabel.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				addRecipeActionPerformed(e);
			}
		});
    }
}
